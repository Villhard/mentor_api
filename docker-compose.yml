services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    networks:
      - app_network

  django:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: django_container
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${DJANGO_PORT}:${DJANGO_PORT}"
    env_file:
      - .env
    volumes:
      - static_volume:/app/src/static
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: nginx_container
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
    depends_on:
      - django
    networks:
      - app_network
      
volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local

networks:
  app_network:
    driver: bridge
      